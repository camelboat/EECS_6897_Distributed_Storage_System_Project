syntax = "proto3";

package version_edit_sync;

service VersionEditSyncService {
  rpc VersionEditSync (VersionEditSyncRequest) returns (VersionEditSyncReply) {} 
  rpc Put(stream PutRequest) returns (stream PutReply){}
  rpc Get(stream GetRequest) returns (stream GetReply){}
}

message VersionEditSyncRequest {
  string  edit_json = 1;
  VersionEditToSync edit = 2;
}

message VersionEditToSync {
  uint64 prev_log_number = 1;
  uint64 log_number = 2;
  repeated NewFile new = 3;
  repeated DeleteFile del = 4;
  uint32 column_family = 5;
}

message NewFile{
  int32 level = 1;

  message FileMetaData {
    message FileDescriptor {
      uint64  file_number = 1;
      uint64  file_size = 2;
      // probably need to send seqno
      uint64 smallest_seqno = 3;
      uint64 largest_seqno = 4;
    }  
    FileDescriptor fd = 1;
    string  smallest_key = 2;
    string  largest_key = 3;

    // not sure if needed to send those fields
    uint64 oldest_ancestor_time = 4;
    uint64 file_creation_time = 5;
    string file_checksum = 6;
    string file_checksum_func_name = 7;
  }
  FileMetaData meta = 2;
}

message DeleteFile {
  int32   level = 1;
  uint64  file_number = 2;
}

message VersionEditSyncReply {
  string message = 1;
}

// The Get request containing a key.
message GetRequest {
  string key = 1;
}

// The Get response containing the status and returned value for the key if key exists
message GetReply {
  bool   ok = 1;
  string status = 2;
  string  value = 3;
}

// The Put request containing a key-value pair.
message PutRequest {
  string key = 1;
  string value = 2;
}

// The Put reply containing the reply status indicating whether the put succeeds
message PutReply {
    bool ok = 1;
    string status = 2;
}
